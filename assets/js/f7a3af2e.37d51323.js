"use strict";(self.webpackChunkfirmware_vault_docs=self.webpackChunkfirmware_vault_docs||[]).push([[1028],{5381:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"Getting Started/installation","title":"Installation","description":"1. Clone the git repo to your machine.","source":"@site/docs/Getting Started/installation.md","sourceDirName":"Getting Started","slug":"/Getting Started/installation","permalink":"/firmware-analysis-docs/docs/Getting Started/installation","draft":false,"unlisted":false,"editUrl":"https://gitlab.informatik.hs-augsburg.de/firmware-analysis/firmware_vault/docs/Getting Started/installation.md","tags":[],"version":"current","frontMatter":{"id":"installation","title":"Installation"},"sidebar":"gettingStartedSidebar","previous":{"title":"Introduction","permalink":"/firmware-analysis-docs/docs/introduction"},"next":{"title":"Firmware Vault","permalink":"/firmware-analysis-docs/docs/Getting Started/How to use/firmware_vault"}}');var i=n(4848),r=n(8453);const o={id:"installation",title:"Installation"},a="Setup",l={},c=[];function d(e){const t={code:"code",h1:"h1",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"setup",children:"Setup"})}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"Clone the git repo to your machine."}),"\n",(0,i.jsxs)(t.li,{children:["Depending on your operating system, execute the ",(0,i.jsx)(t.code,{children:"init_script.sh"})," or the ",(0,i.jsx)(t.code,{children:"init_script_windows.ps1"})," scripts. They will guide you through the configuration. (This will configure config.json for the scraper, frontend, analysis engine, and docker environment.)"]}),"\n",(0,i.jsx)(t.li,{children:"Navigate into the docker_compose_dir."}),"\n",(0,i.jsxs)(t.li,{children:["Start the system with ",(0,i.jsx)(t.code,{children:"docker compose up -d"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"If you have already built the containers and want to rebuild them, use:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"docker compose up -d --build\n"})}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"If you start the entire system, the scraper will start immediately. This will potentially take up a lot of disk space. If you want to start only some parts of the system for testing purposes, you can do that like so:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"docker compose up --build -d mysql_db frontend api_scheduler executor\n"})}),"\n",(0,i.jsx)(t.p,{children:"Depending on what you are trying to achieve, you can also append more containers like:"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"python_scraper"}),": scraper service that downloads Firmware-Images"]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"scheduler"}),": cron service that starts the python_scraper"]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"backup"}),": service that backs up the mysql_db data"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.h1,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(t.p,{children:"Once the system is running, you can view the web UI by visiting port 80 (http) of the host the system is running on:"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.code,{children:"http://localhost"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.code,{children:"http://<ip.of.your.server>"})}),"\n",(0,i.jsx)(t.p,{children:'For a guide on how to create analysis jobs, refer to the "how to use" page in the web UI.'}),"\n",(0,i.jsx)(t.p,{children:"The system comes with two analysis tools pre-installed; both are set up to write the results into the DB:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Intel's CVE Binary Tool:\nLooks for known vulnerabilities in binary files."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"python \n"})}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Binwalk:\nChecks the headers of binary files.\n(Binwalk is intended to gain information to use in further testing.)"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"python binwalk.py <image_id> <image_path>\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"We recommend adding your own tools/analysis modules to the executor container."}),"\n",(0,i.jsx)(t.p,{children:"Please note the scraper will first scrape all the metadata, and only after this step is done, the downloading begins. So you will need to wait a bit before you have data to test."}),"\n",(0,i.jsx)(t.p,{children:"Currently, our scraper is only set up to pull firmware from 4 vendors. Unfortunately, every time the web page of the vendor changes, the scraping process breaks, so you will likely need to redo the vendor-specific parts of the scraper (see documentation)."}),"\n",(0,i.jsx)(t.h1,{id:"documentation",children:"Documentation"}),"\n",(0,i.jsx)(t.p,{children:"For further information about Firmware_Vault, see the documentation folder."}),"\n",(0,i.jsx)(t.h1,{id:"caution",children:"Caution"}),"\n",(0,i.jsx)(t.p,{children:"Firmware Vault exposes ports to the local network. Because we don't want to limit what security testing tools a user might want to run, Firmware Vault essentially  exposes remote code execution to the local network."}),"\n",(0,i.jsx)(t.p,{children:"We also let the user run SQL commands. The checks that prevent data editing are very rudimentary, and malicious queries are likely possible."}),"\n",(0,i.jsx)(t.p,{children:"Because of this, please ensure that only trusted persons have access."})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var s=n(6540);const i={},r=s.createContext(i);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);